name: vdi_simulator_knowledge_100_per_node

display_name: "VDI Simulator: Knowledge Workers, 100 Per Node"

summary: Sustained, fixed-rate performance with VDI workload

description: |
  <strong>Test Objectives</strong><br />
  This test runs a VDI workload on the cluster. VDI VMs are placed on every
  node and run a workload of one of three intensities:
  <ol>
    <li>Task: 8 IOPS per VM</li>
    <li>Knowledge: 12 IOPS per VM</li>
    <li>Power: 26 IOPS per VM</li>
  </ol>
  <Strong>Setup</strong>
  <ol>
    <li>Deploy the VDI VM template.</li>
    <li>Pre-fill the VM template with data.</li>
    <li>Shut down the VM template.</li>
    <li>Clone {{ vms_per_node }} VDI VMs per node.</li>
    <li>Power on the VDI VMs.</li>
  </ol>
  <strong>Measurement</strong>
  <ol>
    <li>Start the VDI workload on all VMs.</li>
    <li>Run for {{ runtime_secs / 3600 }} hour(s).</li>
  </ol>
  <strong>Test Requirements</strong>
  <ul class="indented">
    <li>vCPUs: {{ vms_per_node * 2 }} vCPUs per node</li>
    <li>RAM: {{ vms_per_node * 2 }} GB per node</li>
    <li>Cluster Storage: Up to 1TB per node depending on cloning technology</li>
    <li>IP Addresses: {{ vms_per_node }} per node</li>
  </ul>
  Note: This test scales with the number of nodes.

tags:
  - performance

vars:
  nodes:
    default: all
  vms_per_node:
    default: 100
    min: 1
    max: 200
  runtime_secs:
    default: 3600
    min: 1
    max: 14400

estimated_runtime: 9000

vms:
  - VDI:
      template: ubuntu1604
      vcpus: 2
      ram_mb: 2048
      data_disks:
        count: 1
        size: 16
      nodes: "{{ nodes }}"
      count_per_cluster: 1

workloads:
  - VDI:
      vm_group: VDI
      config_file: vdi.fio
      iogen_params:
        reporting_interval: 10

results:
  - VDI IOPS:
      vm_group: VDI
      result_type: iops
      aggregate: sum
      report_group: performance
      report_metrics:
        - Variability
  - I/O Latency:
      vm_group: VDI
      result_type: latency
      aggregate: mean
      report_group: performance
      report_metrics:
        - Median
  - Cluster CPU Usage:
      metric: CpuUsage.Avg.Megahertz
      aggregate: sum
  - Cluster Network Bandwidth:
      metric: NetReceived.Avg.KilobytesPerSecond
      aggregate: sum

setup:
  - cluster.CleanUp: {}
  - vm_group.CloneFromTemplate:
      vm_group_name: VDI
  - vm_group.PowerOn:
      vm_group_name: VDI
  - workload.PrefillRun:
      workload_name: VDI
  - vm_group.PowerOff:
      vm_group_name: VDI
  - vm_group.Grow:
      vm_group_name: VDI
      count_per_node: {{ vms_per_node }}
      linked_clone: True
  - vm_group.PowerOn:
      vm_group_name: VDI
  # Wait for counters to stabilize before entering Run phase.
  - test.Wait:
      duration_secs: 10

run:
  - workload.Start:
      workload_name: VDI
      runtime_secs: {{ runtime_secs }}

teardown:
  - cluster.CleanUp: {}
